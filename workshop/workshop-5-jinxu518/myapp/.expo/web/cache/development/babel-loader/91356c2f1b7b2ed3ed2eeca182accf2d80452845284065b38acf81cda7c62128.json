{"ast":null,"code":"var _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar baseUrl = 'http://localhost:3000/departments';\nfunction addDepartment(_x) {\n  return _addDepartment.apply(this, arguments);\n}\nfunction _addDepartment() {\n  _addDepartment = _asyncToGenerator(function* (department) {\n    try {\n      var response = yield fetch(`${baseUrl}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(department)\n      });\n      var data = yield response.json();\n      return data;\n    } catch (error) {\n      console.error('POST request error:', error);\n      throw error;\n    }\n  });\n  return _addDepartment.apply(this, arguments);\n}\nfunction getCourses(_x2) {\n  return _getCourses.apply(this, arguments);\n}\nfunction _getCourses() {\n  _getCourses = _asyncToGenerator(function* (departmentCode) {\n    try {\n      var response = yield fetch(`${baseUrl}/${departmentCode}/courses`);\n      if (!response.ok) {\n        throw new Error(`GET request failed with status ${response.status}`);\n      }\n      var data = yield response.json();\n      return data;\n    } catch (error) {\n      console.error('GET request error:', error);\n      throw error;\n    }\n  });\n  return _getCourses.apply(this, arguments);\n}\nfunction addCourse(_x3) {\n  return _addCourse.apply(this, arguments);\n}\nfunction _addCourse() {\n  _addCourse = _asyncToGenerator(function* (newCourse) {\n    try {\n      var departmentCode = \"65315c538dd6286039221d13\";\n      var response = yield fetch(`${baseUrl}/${departmentCode}/courses`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newCourse)\n      });\n      var data = yield response.json();\n      return data;\n    } catch (error) {\n      console.error('POST request error:', error);\n      throw error;\n    }\n  });\n  return _addCourse.apply(this, arguments);\n}\nfunction updateCourse(_x4, _x5) {\n  return _updateCourse.apply(this, arguments);\n}\nfunction _updateCourse() {\n  _updateCourse = _asyncToGenerator(function* (courseCode, updatedName) {\n    try {\n      var departmentCode = \"65315c538dd6286039221d13\";\n      var response = yield fetch(`${baseUrl}/${departmentCode}/courses/${courseCode}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: updatedName\n        })\n      });\n      var data = yield response.json();\n      return data;\n    } catch (error) {\n      console.error('PATCH request error:', error);\n      throw error;\n    }\n  });\n  return _updateCourse.apply(this, arguments);\n}\nfunction deleteCourse(_x6) {\n  return _deleteCourse.apply(this, arguments);\n}\nfunction _deleteCourse() {\n  _deleteCourse = _asyncToGenerator(function* (courseCode) {\n    try {\n      var departmentCode = \"65315c538dd6286039221d13\";\n      var response = yield fetch(`${baseUrl}/${departmentCode}/courses/${courseCode}`, {\n        method: 'DELETE'\n      });\n    } catch (error) {\n      console.error('DELETE request error:', error);\n      throw error;\n    }\n  });\n  return _deleteCourse.apply(this, arguments);\n}","map":{"version":3,"names":["baseUrl","addDepartment","_x","_addDepartment","apply","arguments","_asyncToGenerator","department","response","fetch","method","headers","body","JSON","stringify","data","json","error","console","getCourses","_x2","_getCourses","departmentCode","ok","Error","status","addCourse","_x3","_addCourse","newCourse","updateCourse","_x4","_x5","_updateCourse","courseCode","updatedName","name","deleteCourse","_x6","_deleteCourse"],"sources":["C:/Users/17101/Desktop/course/MAD/workshop/workshop-5-jinxu518/myapp/NetWork.js"],"sourcesContent":["const baseUrl = 'http://localhost:3000/departments';\r\n\r\nasync function addDepartment(department) {\r\n  try {\r\n    const response = await fetch(`${baseUrl}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(department),\r\n    });\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error('POST request error:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nasync function getCourses(departmentCode) {\r\n  try {\r\n    const response = await fetch(`${baseUrl}/${departmentCode}/courses`);\r\n    if (!response.ok) {\r\n      throw new Error(`GET request failed with status ${response.status}`);\r\n    }\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error('GET request error:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nasync function addCourse(newCourse) {\r\n  try {\r\n    const departmentCode = \"65315c538dd6286039221d13\";\r\n    const response = await fetch(`${baseUrl}/${departmentCode}/courses`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(newCourse),\r\n    });\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error('POST request error:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nasync function updateCourse(courseCode, updatedName) {\r\n  try {\r\n    const departmentCode = \"65315c538dd6286039221d13\";\r\n    const response = await fetch(`${baseUrl}/${departmentCode}/courses/${courseCode}`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ name: updatedName }),\r\n    });\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error('PATCH request error:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nasync function deleteCourse(courseCode) {\r\n  try {\r\n    const departmentCode = \"65315c538dd6286039221d13\";\r\n    const response = await fetch(`${baseUrl}/${departmentCode}/courses/${courseCode}`, {\r\n      method: 'DELETE',\r\n    });\r\n  } catch (error) {\r\n    console.error('DELETE request error:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}