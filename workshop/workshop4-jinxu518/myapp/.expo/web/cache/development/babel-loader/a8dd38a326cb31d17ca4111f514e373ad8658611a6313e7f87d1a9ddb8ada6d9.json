{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport { AntDesign } from '@expo/vector-icons';\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { TouchableHighlight } from 'react-native-gesture-handler';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction TouchableStar(_ref) {\n  var index = _ref.index,\n    currentIndex = _ref.currentIndex,\n    setCurrentIndex = _ref.setCurrentIndex;\n  var pressed = function pressed() {\n    setCurrentIndex(index);\n    if (index <= currentIndex) {\n      setCurrentRating(index - 1);\n    } else {\n      setCurrentRating(index);\n    }\n  };\n  return _jsx(TouchableHighlight, {\n    onPress: pressed,\n    children: _jsx(AntDesign, {\n      name: \"star\",\n      size: 30,\n      color: index <= currentIndex ? \"orange\" : \"gray\"\n    })\n  });\n}\nvar StarRating = function StarRating(_ref2) {\n  var setRating = _ref2.setRating;\n  var stars = _toConsumableArray(Array(5));\n  var _useState = useState(-1),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentIndex = _useState2[0],\n    setCurrentIndex = _useState2[1];\n  var setCurrentRating = function setCurrentRating(rating) {\n    setCurrentIndex(rating);\n    setRating(rating);\n  };\n  return _jsx(View, {\n    style: {\n      flexDirection: \"row\",\n      justifyContent: \"center\"\n    },\n    children: stars.map(function (_, i) {\n      return _jsx(TouchableStar, {\n        index: i,\n        currentIndex: currentIndex,\n        setCurrentRating: setCurrentRating\n      }, i);\n    })\n  });\n};\nexport default StarRating;","map":{"version":3,"names":["AntDesign","React","useState","View","TouchableOpacity","TouchableHighlight","jsx","_jsx","TouchableStar","_ref","index","currentIndex","setCurrentIndex","pressed","setCurrentRating","onPress","children","name","size","color","StarRating","_ref2","setRating","stars","_toConsumableArray","Array","_useState","_useState2","_slicedToArray","rating","style","flexDirection","justifyContent","map","_","i"],"sources":["C:/Users/17101/Desktop/course/MAD/workshop/workshop4-jinxu518/myapp/components/StarsComponent.js"],"sourcesContent":["import { AntDesign } from '@expo/vector-icons';\r\nimport React, { useState } from 'react';\r\nimport { View, TouchableOpacity } from 'react-native';\r\nimport { TouchableHighlight } from 'react-native-gesture-handler';\r\nfunction TouchableStar({ index, currentIndex, setCurrentIndex }) {\r\n  const pressed = () => {\r\n    setCurrentIndex(index);\r\n    if (index <= currentIndex) {\r\n      setCurrentRating(index - 1);\r\n    } else {\r\n      setCurrentRating(index)\r\n    }\r\n  }\r\n  return (\r\n    <TouchableHighlight onPress={pressed}>\r\n      <AntDesign name='star' size={30} color={index <= currentIndex ? \"orange\" : \"gray\"} />\r\n    </TouchableHighlight>\r\n  )\r\n}\r\nconst StarRating = ({ setRating }) => {\r\n  let stars = [...Array(5)];\r\n  const [currentIndex, setCurrentIndex] = useState(-1);\r\n  const setCurrentRating = (rating) => {\r\n    setCurrentIndex(rating);\r\n    setRating(rating);\r\n  }\r\n  return (\r\n    <View style={{ flexDirection: \"row\", justifyContent: \"center\" }}>\r\n      {\r\n        stars.map((_, i) => {\r\n          return <TouchableStar key={i} index={i} currentIndex={currentIndex} setCurrentRating={setCurrentRating} />;\r\n        })\r\n      }\r\n    </View>\r\n  )\r\n};\r\n\r\nexport default StarRating;\r\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,oBAAoB;AAC9C,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAExC,SAASC,kBAAkB,QAAQ,8BAA8B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAClE,SAASC,aAAaA,CAAAC,IAAA,EAA2C;EAAA,IAAxCC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAEC,YAAY,GAAAF,IAAA,CAAZE,YAAY;IAAEC,eAAe,GAAAH,IAAA,CAAfG,eAAe;EAC3D,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;IACpBD,eAAe,CAACF,KAAK,CAAC;IACtB,IAAIA,KAAK,IAAIC,YAAY,EAAE;MACzBG,gBAAgB,CAACJ,KAAK,GAAG,CAAC,CAAC;IAC7B,CAAC,MAAM;MACLI,gBAAgB,CAACJ,KAAK,CAAC;IACzB;EACF,CAAC;EACD,OACEH,IAAA,CAACF,kBAAkB;IAACU,OAAO,EAAEF,OAAQ;IAAAG,QAAA,EACnCT,IAAA,CAACP,SAAS;MAACiB,IAAI,EAAC,MAAM;MAACC,IAAI,EAAE,EAAG;MAACC,KAAK,EAAET,KAAK,IAAIC,YAAY,GAAG,QAAQ,GAAG;IAAO,CAAE;EAAC,CACnE,CAAC;AAEzB;AACA,IAAMS,UAAU,GAAG,SAAbA,UAAUA,CAAAC,KAAA,EAAsB;EAAA,IAAhBC,SAAS,GAAAD,KAAA,CAATC,SAAS;EAC7B,IAAIC,KAAK,GAAAC,kBAAA,CAAOC,KAAK,CAAC,CAAC,CAAC,CAAC;EACzB,IAAAC,SAAA,GAAwCxB,QAAQ,CAAC,CAAC,CAAC,CAAC;IAAAyB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7Cf,YAAY,GAAAgB,UAAA;IAAEf,eAAe,GAAAe,UAAA;EACpC,IAAMb,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIe,MAAM,EAAK;IACnCjB,eAAe,CAACiB,MAAM,CAAC;IACvBP,SAAS,CAACO,MAAM,CAAC;EACnB,CAAC;EACD,OACEtB,IAAA,CAACJ,IAAI;IAAC2B,KAAK,EAAE;MAAEC,aAAa,EAAE,KAAK;MAAEC,cAAc,EAAE;IAAS,CAAE;IAAAhB,QAAA,EAE5DO,KAAK,CAACU,GAAG,CAAC,UAACC,CAAC,EAAEC,CAAC,EAAK;MAClB,OAAO5B,IAAA,CAACC,aAAa;QAASE,KAAK,EAAEyB,CAAE;QAACxB,YAAY,EAAEA,YAAa;QAACG,gBAAgB,EAAEA;MAAiB,GAA5EqB,CAA8E,CAAC;IAC5G,CAAC;EAAC,CAEA,CAAC;AAEX,CAAC;AAED,eAAef,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}